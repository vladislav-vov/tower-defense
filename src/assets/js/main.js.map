{"version":3,"file":"main.js","mappings":";;;;;;;;;;AAAa;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB,mBAAO,CAAC,wCAAc;AACvC,qCAAqC,mBAAO,CAAC,2EAA0B;AACvE,iCAAiC,mBAAO,CAAC,2DAAkB;AAC3D;AACA,kBAAkB,UAAU;AAC5B;AACA;AACA;AACA;AACA,sBAAsB,cAAc;AACpC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,kBAAe;;;;;;;;;;;ACvDF;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB,mBAAO,CAAC,wCAAc;AACvC,iCAAiC,mBAAO,CAAC,2DAAkB;AAC3D,oBAAoB,mBAAO,CAAC,wDAAsB;AAClD;AACA,kBAAkB,UAAU;AAC5B,gBAAgB,0DAA0D;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;;;;;;;;;;;AC/DF;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB,mBAAO,CAAC,wCAAc;AACvC;AACA,kBAAkB,UAAU;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;;;;;;;;;;;AC5BF;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB,mBAAO,CAAC,wCAAc;AACvC,iCAAiC,mBAAO,CAAC,2DAAkB;AAC3D;AACA,kBAAkB,iBAAiB;AACnC,gBAAgB,mDAAmD;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;;;;;;;;;;;AClCF;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB,mBAAO,CAAC,wCAAc;AACvC;AACA,kBAAkB,8CAA8C,YAAY,GAAG;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;;;;;;;;;;;AC/CF;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc,GAAG,gBAAgB,GAAG,qBAAqB,GAAG,aAAa;AACzE,cAAc,mBAAO,CAAC,sDAAe;AACrC,yCAAwC,EAAE,qCAAqC,4CAA4C,EAAC;AAC5H,sBAAsB,mBAAO,CAAC,sFAA+B;AAC7D,iDAAgD,EAAE,qCAAqC,oDAAoD,EAAC;AAC5I,iBAAiB,mBAAO,CAAC,kEAAqB;AAC9C,4CAA2C,EAAE,qCAAqC,+CAA+C,EAAC;AAClI,eAAe,mBAAO,CAAC,0DAAiB;AACxC,0CAAyC,EAAE,qCAAqC,6CAA6C,EAAC;;;;;;;;;;;ACbjH;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,0BAA0B;AAC1B,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACZa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB;AACjB,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;;;;;;;;;;;AC5Ca;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,kBAAkB,GAAG,mBAAmB,GAAG,qBAAqB,GAAG,WAAW,GAAG,cAAc;AAC/F,cAAc;AACd,WAAW;AACX,qBAAqB;AACrB,mBAAmB;AACnB,kBAAkB;;;;;;;;;;;ACPL;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iBAAiB,mBAAO,CAAC,oCAAU;AACnC,kBAAkB,mBAAO,CAAC,4CAAW;AACrC,oBAAoB,mBAAO,CAAC,oDAAkB;AAC9C,6BAA6B,mBAAO,CAAC,sEAA2B;AAChE,qDAAqD,mBAAO,CAAC,wFAAoC;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA,oBAAoB,oBAAoB;AACxC;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sDAAsD,QAAQ;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,oBAAoB,2BAA2B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;AC7JY;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA,kBAAe;;;;;;;UCTf;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://tower-defense/./src/ts/classes/Building/Building.ts","webpack://tower-defense/./src/ts/classes/Enemy/Enemy.ts","webpack://tower-defense/./src/ts/classes/PlacementTile/PlacementTile.ts","webpack://tower-defense/./src/ts/classes/Projectile/Projectile.ts","webpack://tower-defense/./src/ts/classes/Sprite/Sprite.ts","webpack://tower-defense/./src/ts/classes/index.ts","webpack://tower-defense/./src/ts/data/placementTilesData.ts","webpack://tower-defense/./src/ts/data/waypoints.ts","webpack://tower-defense/./src/ts/global.ts","webpack://tower-defense/./src/ts/index.ts","webpack://tower-defense/./src/ts/utils/transformPlacementDataTo2D.ts","webpack://tower-defense/webpack/bootstrap","webpack://tower-defense/webpack/before-startup","webpack://tower-defense/webpack/startup","webpack://tower-defense/webpack/after-startup"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst global_1 = require(\"../../global\");\nconst Projectile_1 = __importDefault(require(\"../Projectile/Projectile\"));\nconst Sprite_1 = __importDefault(require(\"../Sprite/Sprite\"));\nclass Building extends Sprite_1.default {\n    constructor({ position }) {\n        super({\n            position,\n            imageSrc: './assets/img/tower.png',\n            framesMax: 19,\n            offset: { x: 0, y: -80 },\n        });\n        this.width = 128;\n        this.height = 64;\n        this.projectiles = [];\n        this.radius = 250;\n        this.target = null;\n        this.center = {\n            x: this.position.x + this.width / 2,\n            y: this.position.y + this.height / 2,\n        };\n    }\n    drawBlocks() {\n        global_1.ctx.fillStyle = 'green';\n        global_1.ctx.fillRect(this.position.x, this.position.y, this.width, this.height);\n        global_1.ctx.beginPath();\n        global_1.ctx.arc(this.center.x, this.center.y, this.radius, 0, Math.PI * 2);\n        global_1.ctx.fillStyle = 'rgba(0, 0, 255, 0.2)';\n        global_1.ctx.fill();\n        global_1.ctx.closePath();\n    }\n    update() {\n        this.draw();\n        if (this.target || (!this.target && this.frames.current !== 0))\n            super.updateFrame();\n        if (this.target &&\n            this.frames.current === 6 &&\n            this.frames.elapsed % this.frames.buffer === 0) {\n            this.shoot();\n        }\n    }\n    shoot() {\n        this.projectiles.push(new Projectile_1.default({\n            position: {\n                x: this.center.x - 20,\n                y: this.center.y - 110,\n            },\n            enemy: this.target,\n        }));\n    }\n}\nexports.default = Building;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst global_1 = require(\"../../global\");\nconst Sprite_1 = __importDefault(require(\"../Sprite/Sprite\"));\nconst waypoints_1 = require(\"../../data/waypoints\");\nclass Enemy extends Sprite_1.default {\n    constructor({ position }) {\n        super({ position, imageSrc: './assets/img/orc.png', framesMax: 7 });\n        this.waypointIndex = 0;\n        this.center = {\n            x: 0,\n            y: 0,\n        };\n        this.radius = 50;\n        this.health = 100;\n        this.velocity = {\n            x: 0,\n            y: 0,\n        };\n        this.speed = 2;\n        this.position = position;\n    }\n    drawBlocks() {\n        global_1.ctx.beginPath();\n        global_1.ctx.arc(this.center.x, this.center.y, this.radius, 0, Math.PI * 2);\n        global_1.ctx.fillStyle = 'red';\n        global_1.ctx.fill();\n        global_1.ctx.closePath();\n    }\n    drawHealthbar() {\n        global_1.ctx.fillStyle = 'red';\n        global_1.ctx.fillRect(this.position.x, this.position.y - 15, this.width, 10);\n        global_1.ctx.fillStyle = 'green';\n        global_1.ctx.fillRect(this.position.x, this.position.y - 15, this.width * (this.health / 100), 10);\n    }\n    update() {\n        this.draw();\n        this.drawHealthbar();\n        super.updateFrame();\n        const waypoint = waypoints_1.waypoints[this.waypointIndex];\n        const xDistance = waypoint.x - this.center.x;\n        const yDistance = waypoint.y - this.center.y;\n        const angle = Math.atan2(yDistance, xDistance);\n        this.velocity.x = Math.cos(angle) * this.speed;\n        this.velocity.y = Math.sin(angle) * this.speed;\n        this.position.x += this.velocity.x;\n        this.position.y += this.velocity.y;\n        this.center = {\n            x: this.position.x + this.width / 2,\n            y: this.position.y + this.height / 2,\n        };\n        if (Math.abs(Math.round(this.center.x) - Math.round(waypoint.x)) <\n            Math.abs(this.velocity.x) &&\n            Math.abs(Math.round(this.center.y) - Math.round(waypoint.y)) <\n                Math.abs(this.velocity.y) &&\n            this.waypointIndex < waypoints_1.waypoints.length - 1) {\n            this.waypointIndex++;\n        }\n    }\n}\nexports.default = Enemy;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst global_1 = require(\"../../global\");\nclass PlacementTile {\n    constructor({ position }) {\n        this.color = 'rgba(255, 255, 255, 0.1)';\n        this.occupied = false;\n        this.position = position;\n    }\n    draw() {\n        global_1.ctx.fillStyle = this.color;\n        global_1.ctx.fillRect(this.position.x, this.position.y, PlacementTile.size, PlacementTile.size);\n    }\n    update(mouse) {\n        this.draw();\n        if (mouse.x &&\n            mouse.y &&\n            mouse.x > this.position.x &&\n            mouse.x < this.position.x + PlacementTile.size &&\n            mouse.y > this.position.y &&\n            mouse.y < this.position.y + PlacementTile.size) {\n            this.color = 'white';\n        }\n        else\n            this.color = 'rgba(255, 255, 255, 0.1)';\n    }\n}\nPlacementTile.size = 64;\nexports.default = PlacementTile;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst global_1 = require(\"../../global\");\nconst Sprite_1 = __importDefault(require(\"../Sprite/Sprite\"));\nclass Projectile extends Sprite_1.default {\n    constructor({ position, enemy }) {\n        super({ position, imageSrc: './assets/img/projectile.png' });\n        this.velocity = {\n            x: 0,\n            y: 0,\n        };\n        this.radius = 10;\n        this.position = position;\n        this.enemy = enemy;\n    }\n    drawBlocks() {\n        global_1.ctx.beginPath();\n        global_1.ctx.arc(this.position.x, this.position.y, this.radius, 0, Math.PI * 2);\n        global_1.ctx.fillStyle = 'orange';\n        global_1.ctx.fill();\n        global_1.ctx.closePath();\n    }\n    update() {\n        this.draw();\n        const angle = Math.atan2(this.enemy.center.y - this.position.y, this.enemy.center.x - this.position.x);\n        this.velocity.x = Math.cos(angle) * 4;\n        this.velocity.y = Math.sin(angle) * 4;\n        this.position.x += this.velocity.x;\n        this.position.y += this.velocity.y;\n    }\n}\nexports.default = Projectile;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst global_1 = require(\"../../global\");\nclass Sprite {\n    constructor({ position, imageSrc, framesMax = 1, offset = { x: 0, y: 0 }, }) {\n        this.frames = {\n            max: 1,\n            current: 0,\n            elapsed: 0,\n            buffer: 3,\n        };\n        this.image = new Image();\n        this.position = position;\n        this.image.src = imageSrc;\n        this.image.onload = () => {\n            this.width = this.image.width / this.frames.max;\n            this.height = this.image.height;\n        };\n        this.frames.max = framesMax;\n        this.offset = offset;\n    }\n    draw() {\n        if (!this.image.complete)\n            return;\n        const cropBox = {\n            position: {\n                x: this.width * this.frames.current,\n                y: 0,\n            },\n            width: this.width,\n            height: this.height,\n        };\n        global_1.ctx.drawImage(this.image, cropBox.position.x, cropBox.position.y, cropBox.width, cropBox.height, this.position.x + this.offset.x, this.position.y + this.offset.y, this.width, this.height);\n    }\n    updateFrame() {\n        if (this.frames.max < 2)\n            return;\n        this.frames.elapsed++;\n        if (this.frames.elapsed % this.frames.buffer === 0) {\n            if (this.frames.current < this.frames.max - 1) {\n                this.frames.current++;\n            }\n            else\n                this.frames.current = 0;\n        }\n    }\n}\nexports.default = Sprite;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Sprite = exports.Building = exports.PlacementTile = exports.Enemy = void 0;\nvar Enemy_1 = require(\"./Enemy/Enemy\");\nObject.defineProperty(exports, \"Enemy\", { enumerable: true, get: function () { return __importDefault(Enemy_1).default; } });\nvar PlacementTile_1 = require(\"./PlacementTile/PlacementTile\");\nObject.defineProperty(exports, \"PlacementTile\", { enumerable: true, get: function () { return __importDefault(PlacementTile_1).default; } });\nvar Building_1 = require(\"./Building/Building\");\nObject.defineProperty(exports, \"Building\", { enumerable: true, get: function () { return __importDefault(Building_1).default; } });\nvar Sprite_1 = require(\"./Sprite/Sprite\");\nObject.defineProperty(exports, \"Sprite\", { enumerable: true, get: function () { return __importDefault(Sprite_1).default; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.placementTilesData = void 0;\nexports.placementTilesData = [\n    0, 14, 0, 14, 0, 14, 0, 14, 0, 14, 0, 14, 0, 14, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0,\n    0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 14, 0, 14, 0,\n    0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0,\n    0, 14, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 14, 0, 0, 0,\n    14, 0, 14, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 14, 0, 14, 0, 14, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 14, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.waypoints = void 0;\nexports.waypoints = [\n    {\n        x: -124.21331566744,\n        y: 475.322954620735,\n    },\n    {\n        x: 276.581649552832,\n        y: 472.01059953627,\n    },\n    {\n        x: 276.581649552832,\n        y: 157.33686651209,\n    },\n    {\n        x: 735.342828751242,\n        y: 158.993044054323,\n    },\n    {\n        x: 735.342828751242,\n        y: 405.763497846969,\n    },\n    {\n        x: 606.160980457105,\n        y: 407.419675389202,\n    },\n    {\n        x: 606.160980457105,\n        y: 669.095727061941,\n    },\n    {\n        x: 1046.70420669096,\n        y: 665.783371977476,\n    },\n    {\n        x: 1050.01656177542,\n        y: 288.17489234846,\n    },\n    {\n        x: 1407.75091089765,\n        y: 286.518714806227,\n    },\n];\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.coinsBlock = exports.heartsBlock = exports.gameOverBlock = exports.ctx = exports.canvas = void 0;\nexports.canvas = document.querySelector('canvas');\nexports.ctx = exports.canvas.getContext('2d');\nexports.gameOverBlock = document.querySelector('#gameOver');\nexports.heartsBlock = document.querySelector('#hearts');\nexports.coinsBlock = document.querySelector('#coins');\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst global_1 = require(\"./global\");\nconst classes_1 = require(\"./classes\");\nconst waypoints_1 = require(\"./data/waypoints\");\nconst placementTilesData_1 = require(\"./data/placementTilesData\");\nconst transformPlacementDataTo2D_1 = __importDefault(require(\"./utils/transformPlacementDataTo2D\"));\nglobal_1.canvas.width = 1280;\nglobal_1.canvas.height = 768;\nconst mouse = {\n    x: undefined,\n    y: undefined,\n};\nconst placementTilesData2D = (0, transformPlacementDataTo2D_1.default)(placementTilesData_1.placementTilesData);\nconst placementTiles = [];\nlet activeTile = null;\nplacementTilesData2D.forEach((row, y) => {\n    row.forEach((symbol, x) => {\n        if (symbol === 14) {\n            placementTiles.push(new classes_1.PlacementTile({\n                position: {\n                    x: x * classes_1.PlacementTile.size,\n                    y: y * classes_1.PlacementTile.size,\n                },\n            }));\n        }\n    });\n});\nconst enemies = [];\nlet enemyCount = 3;\nfunction spawnEnemies(spawnCount) {\n    for (let i = 1; i < spawnCount + 1; i++) {\n        const xOffset = i * 150;\n        enemies.push(new classes_1.Enemy({\n            position: {\n                x: waypoints_1.waypoints[0].x - xOffset,\n                y: waypoints_1.waypoints[0].y,\n            },\n        }));\n    }\n}\nspawnEnemies(enemyCount);\nconst buildings = [];\nconst image = new Image();\nimage.src = './assets/img/gameMap.png';\nimage.onload = () => {\n    animate();\n};\nlet hearts = 10;\nlet coins = 100;\nconst explosions = [];\nlet animationId;\nglobal_1.coinsBlock.innerHTML = coins.toString();\nfunction animate() {\n    animationId = requestAnimationFrame(animate);\n    global_1.ctx.drawImage(image, 0, 0, global_1.canvas.width, global_1.canvas.height);\n    global_1.heartsBlock.innerHTML = hearts.toString();\n    for (let i = enemies.length - 1; i >= 0; i--) {\n        const enemy = enemies[i];\n        enemy.update();\n        if (enemy.position.x > global_1.canvas.width) {\n            hearts -= 1;\n            enemies.splice(i, 1);\n            if (hearts === 0) {\n                cancelAnimationFrame(animationId);\n                global_1.heartsBlock.innerHTML = hearts.toString();\n                global_1.gameOverBlock.style.display = 'flex';\n            }\n        }\n    }\n    for (let i = explosions.length - 1; i >= 0; i--) {\n        const explosion = explosions[i];\n        explosion.draw();\n        explosion.updateFrame();\n        if (explosion.frames.current === explosion.frames.max - 1) {\n            explosions.splice(i, 1);\n        }\n    }\n    if (enemies.length === 0) {\n        enemyCount += 2;\n        spawnEnemies(enemyCount);\n    }\n    placementTiles.forEach((placementTile) => {\n        placementTile.update(mouse);\n    });\n    buildings.forEach((building) => {\n        building.update();\n        building.target = null;\n        const validEnemies = enemies.filter((enemy) => {\n            const xDistance = enemy.center.x - building.center.x;\n            const yDistance = enemy.center.y - building.center.y;\n            const distance = Math.hypot(xDistance, yDistance);\n            return distance < enemy.radius + building.radius;\n        });\n        building.target = validEnemies[0];\n        for (let i = building.projectiles.length - 1; i >= 0; i--) {\n            const projectile = building.projectiles[i];\n            projectile.update();\n            const xDistance = projectile.enemy.center.x - projectile.position.x;\n            const yDistance = projectile.enemy.center.y - projectile.position.y;\n            const distance = Math.hypot(xDistance, yDistance);\n            if (distance < projectile.enemy.radius + projectile.radius) {\n                projectile.enemy.health -= 15;\n                if (projectile.enemy.health <= 0) {\n                    const enemyIndex = enemies.findIndex((enemy) => projectile.enemy === enemy);\n                    if (enemyIndex > -1) {\n                        enemies.splice(enemyIndex, 1);\n                        coins += 25;\n                        global_1.coinsBlock.innerHTML = coins.toString();\n                    }\n                }\n                explosions.push(new classes_1.Sprite({\n                    position: {\n                        x: projectile.position.x,\n                        y: projectile.position.y,\n                    },\n                    framesMax: 4,\n                    imageSrc: './assets/img/explosion.png',\n                }));\n                building.projectiles.splice(i, 1);\n            }\n        }\n    });\n}\nglobal_1.canvas.addEventListener('click', () => {\n    if (activeTile && !activeTile.occupied && coins - 50 >= 0) {\n        coins -= 50;\n        global_1.coinsBlock.innerHTML = coins.toString();\n        buildings.push(new classes_1.Building({\n            position: {\n                x: activeTile.position.x,\n                y: activeTile.position.y,\n            },\n        }));\n        activeTile.occupied = true;\n        buildings.sort((a, b) => {\n            return a.position.y - b.position.y;\n        });\n    }\n});\nwindow.addEventListener('mousemove', (e) => {\n    mouse.x = e.clientX;\n    mouse.y = e.clientY;\n    activeTile = null;\n    for (let i = 0; i < placementTiles.length; i++) {\n        const placementTile = placementTiles[i];\n        if (mouse.x > placementTile.position.x &&\n            mouse.x < placementTile.position.x + classes_1.PlacementTile.size &&\n            mouse.y > placementTile.position.y &&\n            mouse.y < placementTile.position.y + classes_1.PlacementTile.size) {\n            activeTile = placementTile;\n            break;\n        }\n    }\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction transformPlacementDataTo2D(data) {\n    const arr = [];\n    for (let i = 0; i < data.length; i += 20) {\n        arr.push(data.slice(i, i + 20));\n    }\n    return arr;\n}\nexports.default = transformPlacementDataTo2D;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/ts/index.ts\");\n",""],"names":[],"sourceRoot":""}